JOB class
  instance variables:
    String identifier ( job1, job2, etc. ) ( identifier for each job )
    
    int arrival time ( when job is meant to go to the job queue (1st input ) )
    
    int start time ( time it should be processed if the clock hits it )
    
    int expected execution time ( runtime which is taken in as input from external file (2nd input) )
    
    int job wait time ( time the job is in the job queue prior to it starting )
    
    int job turnaround time ( finish time - arrival time )


Queue class
  A circular linked list data structure using nodes is used to make the queue work. It works by keeping the most recently added as a instance variable (lastNode) which points to the front ( next node in line to be dequeued ), this makes it easy to add and remove items from the queue
  
Input Examples
  job1  12  6
  job2  14  4
  job2  17  2
  job3  21  4
  job4  26  1

Expected output



  Job Control Analysis: Summary Report
  ------------------------------------
  
  job id    arrival    start    run    wait    turnaround
            time       time     time   time    time
  ------    -------    -----    ----   ----    ----------
  
  job1        12          12      6       0       6
  job2        14          18      4       4       8
  job3        17          22      2       5       7
  job4        21          24      4       3       7
  job5        26          28      1       2       3



Average wait time: calcualted by initializing two integer, size and totalWait to 0. For every Job in the Queue size is incremeneted by 1 and totalWait is increased by each job Objects's wait time.

CPU usage: calculated by initializing an int usage to 0. Then every time the genreal control processing runs, increment by 1 if the jobQueue is empty

CPU idle time: calculated by initializing an int idle to 0. Then every time the  genreal control processing runs, incrememnt by 1 if the jobQueue is empty and the inputQueue is not empty

CPU usage %: calculated by using the formula ( CPU usage )/( CPU usage + CPU idle ) once the jobs are all done being processed
