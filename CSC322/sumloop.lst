     1                                  ; Bob Allen
     2                                  ; Playing with Loops and summing
     3                                  ; Fall 2023
     4                                  
     5                                  SECTION .data
     6                                  ; define data/variables here.  Think DB, DW, DD, DQ
     7 00000000 010002000300040005-     array:	dw	1,2,3,4,5,6,-1,-2,-3,-4,-5,-7
     8 00000009 000600FFFFFEFFFDFF-
     9 00000012 FCFFFBFFF9FF       
    10                                  
    11                                  
    12                                  SECTION .bss
    13                                  ; define uninitialized data here
    14 00000000 <res 00000002>          sum:	RESW 1
    15                                  
    16                                  SECTION .text
    17                                  global _main
    18                                  _main:
    19                                  
    20                                  ;;;; Init sum to zero (just a nice first step)
    21 00000000 66C705[00000000]00-     	mov word [sum],0
    22 00000008 00                 
    23                                  
    24                                  ;;;; Sum the array in ax (first) so zero it out
    25 00000009 6631C0                  	xor ax,ax
    26                                  
    27                                  ;;;; Loop ecx times, adding the next array element into ax
    28 0000000C BB[00000000]            	mov ebx,array	;; ebx points to the next element in array
    29 00000011 B90C000000              	mov ecx,12	;; ecx is our loop counter (i.e. len of array)
    30                                  
    31                                  top:
    32 00000016 660303                  	add  ax,[ebx]	;; add next array element to 'sum'
    33 00000019 83C302                  	add  ebx,2	;; point to the next element in array
    34 0000001C E2F8                    	loop top
    35                                  
    36                                  ;;;; Write ax sum into sum variable
    37 0000001E 66A3[00000000]          	mov [sum],ax
    38                                  
    39                                  lastBreak:
    40                                  
    41                                  ; Normal termination code
    42 00000024 B801000000              mov eax, 1
    43 00000029 BB00000000              mov ebx, 0
    44 0000002E CD80                    int 80h
